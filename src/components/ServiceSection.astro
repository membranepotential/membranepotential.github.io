---
import type { Service } from '../types'
import Obfuscated from './Obfuscated.astro'

// Map color names to Tailwind classes for customization
export const colorMap = {
  indigo: {
    accent: 'bg-indigo-500',
    light: 'bg-indigo-100',
    text: 'text-indigo-600',
    button: 'bg-indigo-600 hover:bg-indigo-700',
    divider: 'border-indigo-300',
  },
  blue: {
    accent: 'bg-blue-500',
    light: 'bg-blue-100',
    text: 'text-blue-600',
    button: 'bg-blue-600 hover:bg-blue-700',
    divider: 'border-blue-300',
  },
  emerald: {
    accent: 'bg-emerald-500',
    light: 'bg-emerald-100',
    text: 'text-emerald-600',
    button: 'bg-emerald-600 hover:bg-emerald-700',
    divider: 'border-emerald-300',
  },
  purple: {
    accent: 'bg-purple-500',
    light: 'bg-purple-100',
    text: 'text-purple-600',
    button: 'bg-purple-600 hover:bg-purple-700',
    divider: 'border-purple-300',
  },
  amber: {
    accent: 'bg-amber-500',
    light: 'bg-amber-100',
    text: 'text-amber-600',
    button: 'bg-amber-600 hover:bg-amber-700',
    divider: 'border-amber-300',
  },
}

interface Props {
  service: Service
  email: string
  accentColor?: keyof typeof colorMap
  mirrored?: boolean
}

const {
  service: {
    title,
    subheader,
    image,
    problem,
    description,
    benefits,
    caseStudy,
    cta,
  },
  email,
  accentColor = 'indigo',
  mirrored = false,
} = Astro.props

const colors = colorMap[accentColor] || colorMap.indigo

// Define columns based on mirrored prop
const imageColumn = mirrored ? 'order-2' : 'order-1'
const contentColumn = mirrored ? 'order-1' : 'order-2'
---

<section
  class="flex w-full snap-start flex-col lg:h-screen lg:flex-row"
  id={title.toLowerCase().replace(/\s+/g, '-')}
>
  <!-- Image Column -->
  <div
    class={`w-1/3 hidden ${imageColumn} lg:flex items-center justify-center`}
  >
    <img src={image.src} alt={image.alt} class="h-auto w-full" />
  </div>

  <!-- Content Column -->
  <div
    class={`w-full lg:w-2/3 ${contentColumn} flex flex-col justify-center px-16 py-12 ${colors.light} items-start`}
  >
    <!-- Title and Subheader -->
    <div class="mb-6">
      <div class={`w-16 h-1 ${colors.accent} mb-4`}></div>
      <h2 class="mb-3 text-3xl font-bold text-gray-800 md:text-4xl">
        {title}
      </h2>
      <p class={`text-xl md:text-2xl ${colors.text} font-medium`}>
        {subheader}
      </p>
    </div>

    <!--- Image for smaller displays -->
    <div class="mb-6 flex w-full items-center justify-center py-2 lg:hidden">
      <img src={image.src} alt={image.alt} class="h-auto w-1/2" />
    </div>

    <!-- Problem Statement -->
    <div class="mb-6">
      <h3 class="mb-2 text-lg font-semibold text-gray-700">The Challenge</h3>
      <p class="text-gray-600">{problem}</p>
    </div>

    <!-- Solution Description -->
    <div class="mb-6">
      <h3 class="mb-2 text-lg font-semibold text-gray-700">Our Approach</h3>
      <p class="text-gray-600">{description}</p>
    </div>

    <!-- Benefits -->
    <div class="mb-6">
      <h3 class="mb-2 text-lg font-semibold text-gray-700">Key Benefits</h3>
      <ul class="space-y-2">
        {
          benefits.map((benefit) => (
            <li class="flex items-start">
              <span class={`flex-shrink-0 ${colors.text} mr-2`}>
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  class="h-5 w-5"
                  viewBox="0 0 20 20"
                  fill="currentColor"
                >
                  <path
                    fill-rule="evenodd"
                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                    clip-rule="evenodd"
                  />
                </svg>
              </span>
              <span class="text-gray-700">{benefit}</span>
            </li>
          ))
        }
      </ul>
    </div>

    {
      caseStudy && (
        <div class="mb-6">
          <h3 class="mb-2 text-lg font-semibold text-gray-700">
            Success Story
          </h3>
          <p class="text-gray-600">{caseStudy}</p>
        </div>
      )
    }

    <!-- CTA Button -->
    <div class="mt-2">
      <Obfuscated value={email}>
        <a
          href="#"
          class={`inline-flex items-center px-6 py-3 rounded-lg text-white ${colors.button} transition-all duration-300 transform hover:translate-y-[-2px] shadow-md hover:shadow-lg`}
          data-attr="href"
        >
          <span>{cta}</span>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            class="ml-2 h-5 w-5"
            viewBox="0 0 20 20"
            fill="currentColor"
          >
            <path
              fill-rule="evenodd"
              d="M12.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L14.586 11H3a1 1 0 110-2h11.586l-2.293-2.293a1 1 0 010-1.414z"
              clip-rule="evenodd"></path>
          </svg>
        </a>
      </Obfuscated>
    </div>
  </div>
</section>
